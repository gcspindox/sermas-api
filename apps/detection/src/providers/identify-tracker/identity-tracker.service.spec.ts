jest.mock('openai');

import { Logger } from '@nestjs/common';
import { EventEmitterModule } from '@nestjs/event-emitter';
import { Test, TestingModule } from '@nestjs/testing';
import { IdentityTrackerService } from './identity-tracker.service';

jest.setTimeout(10 * 100000);

describe('IdentityTrackerService', () => {
  let moduleRef: TestingModule;

  let identityTrackerService: IdentityTrackerService;

  beforeAll(async () => {
    moduleRef = await Test.createTestingModule({
      imports: [EventEmitterModule.forRoot()],
      controllers: [],
      providers: [IdentityTrackerService],
    }).compile();

    moduleRef.useLogger(new Logger());

    identityTrackerService = moduleRef.get(IdentityTrackerService);

    await moduleRef.init();
  });
  afterAll(async () => {
    if (moduleRef) await moduleRef.close();
  });

  describe('speaker identity', () => {
    it('should ', async () => {
      const a =
        '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';
      const b =
        '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';
      const c =
        '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';

      identityTrackerService.addEmbedding('test', a);
      identityTrackerService.addEmbedding('test', b);
      identityTrackerService.addEmbedding('test', c);
      identityTrackerService.process('test');

      const emb = identityTrackerService.getSpeakerEmbedding('test');

      expect(emb).toBe(a);
    });
  });
});
